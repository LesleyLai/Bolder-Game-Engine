language: cpp
sudo: false

matrix:
  include:

    # Linux C++14 GCC builds
    - os: linux
      compiler: gcc
      addons: &gcc6
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6']
      env: COMPILER='g++-6' BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc6
      env: COMPILER='g++-6' BUILD_TYPE='Debug'

    ############################################################################
    # # Linux C++14 Clang builds                                               #
    # - os: linux                                                              #
    #   compiler: clang                                                        #
    #   addons: &clang38                                                       #
    #     apt:                                                                 #
    #       sources: ['llvm-toolchain-precise-3.8', 'ubuntu-toolchain-r-test'] #
    #       packages: ['clang-3.8']                                            #
    #   env: COMPILER='clang++-3.8' BUILD_TYPE='Release'                       #
    #                                                                          #
    # - os: linux                                                              #
    #   compiler: clang                                                        #
    #   addons: *clang38                                                       #
    #   env: COMPILER='clang++-3.8' BUILD_TYPE='Debug'                         #
    ############################################################################

    # OSX C++14 Clang Builds

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Debug'

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release'


install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"

  - if [[ "${BOOST_VERSION}" == "default" ]]; then BOOST_VERSION=1.63.0; fi

  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  ############################################################################
  # Install Cmake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
    fi

  ############################################################################
  # Install a recent Doxygen
  ############################################################################
  - |
    if [[ "${DOCUMENTATION}" == "true" ]]; then
      DOXYGEN_URL="http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.11.linux.bin.tar.gz"
      mkdir doxygen && travis_retry wget --quiet -O - ${DOXYGEN_URL} | tar --strip-components=1 -xz -C doxygen
      export PATH=${DEPS_DIR}/doxygen/bin:${PATH}
      doxygen --version
    fi


before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H. -BBuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -Wdev ${CMAKE_OPTIONS}
  - cd Build

script:
  - make -j 2
  - ctest -V -j 2
